apiVersion: uds.dev/v1alpha1
kind: Package
metadata:
  name: gitlab
  namespace: {{ .Release.Namespace }}
spec:
  {{- if .Values.sso }}
  sso:
    - name: Gitlab SSO
      clientId: uds-core-gitlab
      redirectUris:
        - "https://gitlab.{{ .Values.domain }}/users/auth/openid_connect/callback"
      secretName: gitlab-sso-provider-json
      secretTemplate:
        # GitLab expects a providers JSON file that is documented more here: https://gitlab-org.gitlab.io/technical-writing-group/gitlab-docs-hugo/administration/auth/oidc/
        # Note: the `authorization_endpoint`, `issuer`, and `userinfo_endpoint` must be the external URL
        providers: |
          {
            "name": "openid_connect",
            "label": "SSO",
            "args": {
              "name": "openid_connect",
              "scope": [
                "openid",
                "profile"
              ],
              "response_type": "code",
              "issuer": "https://sso.{{ .Values.domain }}/realms/uds",
              "client_auth_method": "query",
              "discovery": false,
              "uid_field": "preferred_username",
              "client_options": {
                "identifier": "clientField(clientId)",
                "secret": "clientField(secret)",
                "redirect_uri": "clientField(redirectUris)[0]",
                "end_session_endpoint": "http://keycloak-http.keycloak.svc.cluster.local:8080/realms/uds/protocol/openid-connect/logout",
                "authorization_endpoint": "https://sso.{{ .Values.domain }}/realms/uds/protocol/openid-connect/auth",
                "token_endpoint": "http://keycloak-http.keycloak.svc.cluster.local:8080/realms/uds/protocol/openid-connect/token",
                "userinfo_endpoint": "https://sso.{{ .Values.domain }}/realms/uds/protocol/openid-connect/userinfo",
                "jwks_uri": "http://keycloak-http.keycloak.svc.cluster.local:8080/realms/uds/protocol/openid-connect/certs"
              }
            }
          }
  {{- end }}
  network:
    expose:
      - service: gitlab-webservice-default
        podLabels:
          app: webservice
        host: gitlab
        gateway: tenant
        port: 8181
      - service: gitlab-gitlab-pages
        podLabels:
          app: gitlab-pages
        host: "*.pages"
        gateway: tenant
        port: 8090
      - service: gitlab-registry
        podLabels:
          app: registry
        host: registry
        gateway: tenant
        port: 5000
    allow:
      - direction: Ingress
        remoteGenerated: IntraNamespace

      - direction: Ingress
        # todo: this should be scoped when we know where the runner is
        podLabels:
          app: webservice
        port: 8181
        description: "Runner Ingress Workhorse"

      - direction: Ingress
        remoteNamespace: monitoring
        remotePodLabels:
          app: prometheus
        podLabels:
          app: gitlab-exporter
        port: 9168
        description: "Monitoring Exporter"

      - direction: Ingress
        podLabels:
          app: runner
        remoteNamespace: monitoring
        remotePodLabels:
          app: prometheus

        port: 9252
        description: "Monitoring Runner"

      - direction: Egress
        podLabels:
          app: registry
        remoteGenerated: Anywhere
        description: "Registry Storage"

      - direction: Egress
        podLabels:
          app: sidekiq
        remoteGenerated: Anywhere
        description: "Sidekiq Storage"

      - direction: Egress
        podLabels:
          app: migrations
        remoteGenerated: Anywhere
        description: "Migrations Storage"
      
      - direction: Egress
        podLabels:
          app: toolbox
        remoteGenerated: Anywhere
        description: "Toolbox egress to database, redis and storage"

      - direction: Egress
        remoteGenerated: IntraNamespace

      - direction: Egress
        # todo: this is over permissive, need to scope it down
        remoteGenerated: KubeAPI

      - direction: Egress
        remoteNamespace: tempo
        remotePodLabels:
          app.kubernetes.io/name: tempo
        port: 9411
        description: "Tempo"

      - direction: Egress
        remoteNamespace: keycloak
        selector:
          app.kubernetes.io/name: keycloak
        selector:
          app: webservice
        port: 8080
        description: "SSO"

      - direction: Egress
        podLabels:
          app: webservice
        remoteGenerated: Anywhere
        description: "Webservice Storage"

      - direction: Ingress
        podLabels:
          app: gitlab-pages
        port: 8090
        description: GitLab Pages Ingress

      - direction: Egress
        podLabels:
          app: gitlab-pages
        remoteGenerated: Anywhere
        description: "GitLab Pages Storage"
